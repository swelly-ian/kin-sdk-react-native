// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target x86_64-apple-ios13.2-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name KinSDK
import Base58Swift
import Foundation
import KinBase
import KinDesign
@_exported import KinSDK
import KinUX
import Promises
import Swift
import UIKit
import stellarsdk
@_hasMissingDesignatedInitializers @objc(KinWalletDemoViewController) public class KinWalletDemoViewController : UIKit.UIViewController {
  @objc dynamic public init()
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @objc override dynamic public func viewWillLayoutSubviews()
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
}
extension KinWalletDemoViewController : UIKit.UITableViewDataSource {
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, heightForRowAt indexPath: Foundation.IndexPath) -> CoreGraphics.CGFloat
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, heightForHeaderInSection section: Swift.Int) -> CoreGraphics.CGFloat
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, viewForHeaderInSection section: Swift.Int) -> UIKit.UIView?
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, heightForFooterInSection section: Swift.Int) -> CoreGraphics.CGFloat
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, viewForFooterInSection section: Swift.Int) -> UIKit.UIView?
}
extension KinWalletDemoViewController : UIKit.UITableViewDelegate {
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, didSelectRowAt indexPath: Foundation.IndexPath)
}
@_inheritsConvenienceInitializers @objc(KinSDKUtils) public class KinSDKUtils : ObjectiveC.NSObject {
  @objc(generateRandomKeyPair::) public static func generateRandomKeyPair(resolve: @escaping (Foundation.NSMutableDictionary) -> Swift.Void, reject: @escaping (Swift.String, Swift.String, Foundation.NSError) -> Swift.Void)
  @objc(createAccount::::) public static func createAccount(env: Swift.String, account: Foundation.NSDictionary, resolve: @escaping (Swift.Bool) -> Swift.Void, reject: @escaping (Foundation.NSError) -> Swift.Void)
  @objc(sendPayment::::) public static func sendPayment(env: Swift.String, request: Foundation.NSDictionary, resolve: @escaping (Swift.Bool) -> Swift.Void, reject: @escaping (Swift.String, Swift.String, Foundation.NSError) -> Swift.Void)
  @objc(getBalance::::) public static func getBalance(env: Swift.String, account: Foundation.NSDictionary, resolve: @escaping (Foundation.NSMutableDictionary) -> Swift.Void, reject: @escaping (Swift.String, Swift.String, Foundation.NSError) -> Swift.Void)
  @objc(fundAccount::::) public static func fundAccount(env: Swift.String, account: Foundation.NSDictionary, resolve: @escaping (Swift.Bool) -> Swift.Void, reject: @escaping (Swift.String, Swift.String, Foundation.NSError) -> Swift.Void)
  @objc deinit
  @objc override dynamic public init()
}
@objc @_inheritsConvenienceInitializers public class HomeViewController : UIKit.UIViewController {
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public func viewWillLayoutSubviews()
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
public var enableTestMigration: Swift.Bool
public var useKin2: Swift.Bool
